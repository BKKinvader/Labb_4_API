// <auto-generated />
using Labb_4_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_4_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230505160331_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonModels.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Konsten att ta bilder med en kamera",
                            Title = "Fotografering"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Att skapa kulinariska mästerverk i köket",
                            Title = "Matlagning"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Odlar växter och blommor utomhus",
                            Title = "Trädgårdsarbete"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Ett spel som spelas på ett bord med kulor och köer",
                            Title = "Biljard"
                        });
                });

            modelBuilder.Entity("PersonModels.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonHobbyId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("PersonHobbyId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonHobbyId = 1,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcRmT6uWEdqwp8Rb7_ovgPvSxF--xYUzle3w&usqp=CAU"
                        },
                        new
                        {
                            Id = 2,
                            PersonHobbyId = 2,
                            Url = "https://t4.ftcdn.net/jpg/03/32/75/39/360_F_332753934_tBacXEgxnVplFBRyKbCif49jh0Wz89ns.jpg"
                        },
                        new
                        {
                            Id = 3,
                            PersonHobbyId = 5,
                            Url = "https://i.guim.co.uk/img/media/ef96c1f2495b60ec83379962d4aec38bfb1ce039/0_187_5600_3363/master/5600.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=a96e7cb435ac3a89558b8315d39c068d"
                        },
                        new
                        {
                            Id = 4,
                            PersonHobbyId = 6,
                            Url = "https://lirp.cdn-website.com/5152f937/dms3rep/multi/opt/GettyImages-582313494-553w.jpg"
                        });
                });

            modelBuilder.Entity("PersonModels.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Anna Svensson",
                            PhoneNumber = "070-1234567"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Karl Nilsson",
                            PhoneNumber = "072-9876543"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Emma Johansson",
                            PhoneNumber = "073-4567890"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Erik Andersson",
                            PhoneNumber = "071-6543210"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sofia Gustafsson",
                            PhoneNumber = "075-9876123"
                        });
                });

            modelBuilder.Entity("PersonModels.PersonHobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HobbyId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonHobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HobbyId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            HobbyId = 2,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            HobbyId = 1,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 4,
                            HobbyId = 3,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 5,
                            HobbyId = 4,
                            PersonId = 4
                        },
                        new
                        {
                            Id = 6,
                            HobbyId = 2,
                            PersonId = 5
                        },
                        new
                        {
                            Id = 7,
                            HobbyId = 3,
                            PersonId = 5
                        });
                });

            modelBuilder.Entity("PersonModels.Link", b =>
                {
                    b.HasOne("PersonModels.PersonHobby", "PersonHobby")
                        .WithMany("Links")
                        .HasForeignKey("PersonHobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonHobby");
                });

            modelBuilder.Entity("PersonModels.PersonHobby", b =>
                {
                    b.HasOne("PersonModels.Hobby", "Hobby")
                        .WithMany("PersonHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonModels.Person", "Person")
                        .WithMany("PersonHobbies")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonModels.Hobby", b =>
                {
                    b.Navigation("PersonHobbies");
                });

            modelBuilder.Entity("PersonModels.Person", b =>
                {
                    b.Navigation("PersonHobbies");
                });

            modelBuilder.Entity("PersonModels.PersonHobby", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
